// 1. Задержка на промисах

// function delay(ms) {
//     const newPromise = new Promise((resolve)=>{
//         setTimeout(()=>{
//             resolve()
//         }, ms)
//     })
//     return newPromise;
// }
//   delay(3000).then(() => alert('выполнилось через 3 секунды'));

//______________________________________________________________________

// 2. Можно ли "перевыполнить" промис?

// Что выведет код ниже

// let promise = new Promise(function (resolve, reject) {
//     resolve(1);
//     setTimeout(() => resolve(2), 1000);
// });
// promise.then(alert);

// Думаю, что выведет resolved(1), потому что в Промис может принять 1 resolve (мб ошибаюсь)

//______________________________________________________________________

// 3. Промисы: сравните then и catch

// promise.then(f1).catch(f2);
// vs
// promise.then(f1, f2);

// Нет, не эквивалентные. Потому, что catch ловит ошибку, а then выполняет только то, что resolved
// В случаи если во втором промисе f2 будет ошибкой, то мы не словим эту(потому что мы его не обработали) ошибку и браузер выдаст ошибку красным(в консоле)